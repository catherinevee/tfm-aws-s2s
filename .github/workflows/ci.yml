name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  TF_VERSION: "1.13.0"
  AWS_PROVIDER_VERSION: "6.2.0"

jobs:
  validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          output_format: sarif
          output_file_path: reports/results.sarif

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: true

  test:
    name: Terraform Test
    runs-on: ubuntu-latest
    needs: [validate]
    strategy:
      matrix:
        example: [basic-vpn, direct-connect, transit-gateway, hybrid-advanced]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Test
        run: terraform test
        working-directory: .

      - name: Example Plan Test
        run: |
          terraform init
          terraform plan
        working-directory: examples/${{ matrix.example }}

  documentation:
    name: Update Documentation
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Render terraform docs
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true"
          git-commit-message: "terraform-docs: automated action"

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.event_name == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Publish to Terraform Registry
        run: |
          echo "Module ready for Terraform Registry publishing"
          echo "Release version: ${{ github.event.release.tag_name }}"
